{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\n// Arrow key constants\nvar $197cd56b15c33885$var$ARROW_KEYS = {\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    DOWN: \"ArrowDown\"\n};\n// DOM elements\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$gameBoardRows = document.querySelectorAll(\"tr\");\nvar $197cd56b15c33885$var$messages = {\n    lose: document.querySelector(\".message-lose\"),\n    win: document.querySelector(\".message-win\"),\n    start: document.querySelector(\".message-start\")\n};\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable prettier/prettier */ function $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.generateDefaultState();\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.status = Game.gameStatuses.IDLE;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"generateDefaultState\",\n            value: function generateDefaultState() {\n                return Array(4).fill(0).map(function() {\n                    return Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (!this.isStateValid(this.state)) return;\n                var updatedState = this.state.map(function(row) {\n                    return _this.applyMove(row);\n                });\n                this.updateGameState(updatedState);\n                this.completeMoveTasks();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                var reversedState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                });\n                if (!this.isStateValid(reversedState)) return;\n                var updatedState = reversedState.map(function(row) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.applyMove(row).reverse());\n                });\n                if (!this.isStateDifferent(this.state, updatedState)) return;\n                this.updateGameState(updatedState);\n                this.completeMoveTasks();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                var rotatedRightState = this.rotateRight(this.state);\n                if (!this.isStateValid(rotatedRightState)) return;\n                var updatedState = rotatedRightState.map(function(row) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.applyMove((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row)));\n                });\n                var rotatedLeftState = this.rotateLeft(updatedState);\n                this.updateGameState(rotatedLeftState);\n                this.completeMoveTasks();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                var rotatedRightState = this.rotateRight(this.state);\n                var reversedState = rotatedRightState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                });\n                if (!this.isStateValid(reversedState)) return;\n                var updatedState = reversedState.map(function(row) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.applyMove(row).reverse());\n                });\n                var rotatedLeftState = this.rotateLeft(updatedState);\n                this.updateGameState(rotatedLeftState);\n                this.completeMoveTasks();\n            }\n        },\n        {\n            key: \"isStateDifferent\",\n            value: function isStateDifferent(stateA, stateB) {\n                return JSON.stringify(stateA) !== JSON.stringify(stateB);\n            }\n        },\n        {\n            key: \"applyMove\",\n            value: function applyMove(vector) {\n                var newRow = [];\n                var i = 0;\n                while(i < vector.length){\n                    var current = vector[i];\n                    var next = vector[i + 1];\n                    if (current) {\n                        if (current === next) {\n                            newRow.push(current * 2);\n                            this.score += current * 2;\n                            i += 2;\n                        } else {\n                            newRow.push(current);\n                            i++;\n                        }\n                    } else i++;\n                }\n                while(newRow.length < vector.length)newRow.push(0);\n                return newRow;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.gameStatuses.PLAYING;\n                this.completeMoveTasks(2);\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.resetState();\n                this.status = Game.gameStatuses.IDLE;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"generateNewTile\",\n            value: function generateNewTile() {\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length === 0) return;\n                var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                var _randomCell = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(randomCell, 2), row = _randomCell[0], col = _randomCell[1];\n                this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                var matrix = this.getState();\n                return matrix.flatMap(function(row, rowIndex) {\n                    return(// eslint-disable-next-line prettier/prettier, max-len, comma-dangle\n                    row.map(function(cell, colIndex) {\n                        return cell === 0 ? [\n                            rowIndex,\n                            colIndex\n                        ] : null;\n                    }));\n                }).filter(Boolean);\n            }\n        },\n        {\n            key: \"rotateLeft\",\n            value: function rotateLeft(matrix) {\n                var rows = matrix.length;\n                var cols = matrix[0].length;\n                var resultMatrix = Array.from({\n                    length: cols\n                }, function() {\n                    return(// eslint-disable-next-line comma-dangle\n                    Array(rows).fill(\"\"));\n                });\n                for(var row = 0; row < rows; row++)for(var col = 0; col < cols; col++){\n                    var newRow = col;\n                    var newCol = rows - 1 - row;\n                    resultMatrix[newRow][newCol] = matrix[row][col];\n                }\n                return resultMatrix;\n            }\n        },\n        {\n            key: \"rotateRight\",\n            value: function rotateRight(matrix) {\n                var rows = matrix.length;\n                var cols = matrix[0].length;\n                var resultMatrix = Array.from({\n                    length: cols\n                }, function() {\n                    return Array(rows).fill(\"\");\n                });\n                for(var row = 0; row < rows; row++)for(var col = 0; col < cols; col++){\n                    var newRow = cols - 1 - col;\n                    var newCol = row;\n                    resultMatrix[newRow][newCol] = matrix[row][col];\n                }\n                return resultMatrix;\n            }\n        },\n        {\n            key: \"isStateValid\",\n            value: function isStateValid(state) {\n                if (this.status !== Game.gameStatuses.PLAYING) return false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var hasAdjacentEqualCells = false;\n                        var hasIsolatedEmptyCell = false;\n                        for(var i = 0; i < row.length - 1; i++){\n                            if (row[i] === row[i + 1]) {\n                                hasAdjacentEqualCells = true;\n                                break;\n                            }\n                            if (row[i] === 0) hasIsolatedEmptyCell = true;\n                        }\n                        if (hasAdjacentEqualCells || hasIsolatedEmptyCell) return true;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"completeMoveTasks\",\n            value: function completeMoveTasks() {\n                var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                for(var i = 0; i < count; i++)this.generateNewTile();\n                var state = this.getState();\n                if (this.isVictory(state)) this.status = Game.gameStatuses.WIN;\n                else if (this.isDefeat(state)) this.status = Game.gameStatuses.LOSE;\n            }\n        },\n        {\n            key: \"isDefeat\",\n            value: function isDefeat(state) {\n                var _this = this;\n                var rotatedState = this.rotateRight(state);\n                return [\n                    state,\n                    rotatedState\n                ].every(function(currentState) {\n                    return !_this.isStateValid(currentState);\n                });\n            }\n        },\n        {\n            key: \"isVictory\",\n            value: function isVictory(state) {\n                return state.flat().includes(2048);\n            }\n        },\n        {\n            key: \"resetState\",\n            value: function resetState() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        },\n        {\n            key: \"updateGameState\",\n            value: function updateGameState(state) {\n                this.state = state;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"gameStatuses\", {\n    IDLE: \"idle\",\n    PLAYING: \"playing\",\n    WIN: \"win\",\n    LOSE: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$isFirstMove = true;\n/** Updates the game board with the current game state. */ var $197cd56b15c33885$var$updateGameFields = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$gameBoardRows.forEach(function(row, rowIndex) {\n        Array.from(row.cells).forEach(function(cell) {\n            var cellIndex = cell.cellIndex;\n            var cellValue = state[rowIndex][cellIndex];\n            cell.textContent = \"\";\n            cell.className = \"field-cell\";\n            if (cellValue !== 0) {\n                cell.textContent = cellValue;\n                cell.classList.add(\"field-cell--\".concat(cellValue));\n            }\n        });\n    });\n};\n/** Updates the visible game message based on the current game status. */ var $197cd56b15c33885$var$updateMessage = function() {\n    Object.values($197cd56b15c33885$var$messages).forEach(function(message) {\n        return message.classList.add(\"hidden\");\n    });\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") $197cd56b15c33885$var$messages.win.classList.remove(\"hidden\");\n    else if (gameStatus === \"lose\") $197cd56b15c33885$var$messages.lose.classList.remove(\"hidden\");\n    else if (gameStatus === \"idle\") $197cd56b15c33885$var$messages.start.classList.remove(\"hidden\");\n};\n/** Updates the game score display. */ var $197cd56b15c33885$var$updateScore = function() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n};\n/** Starts or restarts the game. */ var $197cd56b15c33885$var$startGame = function() {\n    if ($197cd56b15c33885$var$startButton.textContent === \"Start\") $197cd56b15c33885$var$game.start();\n    else if ($197cd56b15c33885$var$startButton.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$updateScore();\n    }\n    $197cd56b15c33885$var$updateGameFields();\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$isFirstMove = true;\n};\n/** Handles arrow key presses for game moves. */ var $197cd56b15c33885$var$handleArrowKey = function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") return;\n    switch(e.key){\n        case $197cd56b15c33885$var$ARROW_KEYS.LEFT:\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case $197cd56b15c33885$var$ARROW_KEYS.RIGHT:\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case $197cd56b15c33885$var$ARROW_KEYS.UP:\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case $197cd56b15c33885$var$ARROW_KEYS.DOWN:\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return; // Ignore other keys\n    }\n    if ($197cd56b15c33885$var$isFirstMove) {\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$isFirstMove = false;\n    }\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$updateGameFields();\n    $197cd56b15c33885$var$updateScore();\n};\n// Event listeners\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleArrowKey);\n\n})();\n//# sourceMappingURL=index.654d2a10.js.map\n","'use strict';\n\n// Arrow key constants\nconst ARROW_KEYS = {\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n};\n\n// DOM elements\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst gameBoardRows = document.querySelectorAll('tr');\nconst messages = {\n  lose: document.querySelector('.message-lose'),\n  win: document.querySelector('.message-win'),\n  start: document.querySelector('.message-start'),\n};\n\n// Game setup\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nlet isFirstMove = true;\n\n/** Updates the game board with the current game state. */\nconst updateGameFields = () => {\n  const state = game.getState();\n\n  gameBoardRows.forEach((row, rowIndex) => {\n    Array.from(row.cells).forEach((cell) => {\n      const cellIndex = cell.cellIndex;\n      const cellValue = state[rowIndex][cellIndex];\n\n      cell.textContent = '';\n      cell.className = 'field-cell';\n\n      if (cellValue !== 0) {\n        cell.textContent = cellValue;\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n    });\n  });\n};\n\n/** Updates the visible game message based on the current game status. */\nconst updateMessage = () => {\n  Object.values(messages).forEach((message) => message.classList.add('hidden'));\n\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    messages.win.classList.remove('hidden');\n  } else if (gameStatus === 'lose') {\n    messages.lose.classList.remove('hidden');\n  } else if (gameStatus === 'idle') {\n    messages.start.classList.remove('hidden');\n  }\n};\n\n/** Updates the game score display. */\nconst updateScore = () => {\n  gameScore.textContent = game.getScore();\n};\n\n/** Starts or restarts the game. */\nconst startGame = () => {\n  if (startButton.textContent === 'Start') {\n    game.start();\n  } else if (startButton.textContent === 'Restart') {\n    game.restart();\n    startButton.textContent = 'Start';\n    startButton.classList.replace('restart', 'start');\n    updateScore();\n  }\n\n  updateGameFields();\n  updateMessage();\n  isFirstMove = true;\n};\n\n/** Handles arrow key presses for game moves. */\nconst handleArrowKey = (e) => {\n  if (game.getStatus() === 'idle') {\n    return;\n  }\n\n  switch (e.key) {\n    case ARROW_KEYS.LEFT:\n      game.moveLeft();\n      break;\n    case ARROW_KEYS.RIGHT:\n      game.moveRight();\n      break;\n    case ARROW_KEYS.UP:\n      game.moveUp();\n      break;\n    case ARROW_KEYS.DOWN:\n      game.moveDown();\n      break;\n    default:\n      return; // Ignore other keys\n  }\n\n  if (isFirstMove) {\n    startButton.textContent = 'Restart';\n    startButton.classList.replace('start', 'restart');\n    isFirstMove = false;\n  }\n\n  updateMessage();\n  updateGameFields();\n  updateScore();\n};\n\n// Event listeners\nstartButton.addEventListener('click', startGame);\ndocument.addEventListener('keydown', handleArrowKey);\n","/* eslint-disable prettier/prettier */\n'use strict';\n\nclass Game {\n  static gameStatuses = {\n    IDLE: 'idle',\n    PLAYING: 'playing',\n    WIN: 'win',\n    LOSE: 'lose',\n  };\n\n  constructor(initialState = this.generateDefaultState()) {\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n    this.status = Game.gameStatuses.IDLE;\n    this.score = 0;\n  }\n\n  generateDefaultState() {\n    return Array(4)\n      .fill(0)\n      .map(() => Array(4).fill(0));\n  }\n\n  moveLeft() {\n    if (!this.isStateValid(this.state)) {\n      return;\n    }\n\n    const updatedState = this.state.map((row) => this.applyMove(row));\n\n    this.updateGameState(updatedState);\n    this.completeMoveTasks();\n  }\n\n  moveRight() {\n    const reversedState = this.state.map((row) => [...row].reverse());\n\n    if (!this.isStateValid(reversedState)) {\n      return;\n    }\n\n    const updatedState = reversedState.map((row) =>\n      // eslint-disable-next-line prettier/prettier\n      this.applyMove(row).reverse());\n\n    if (!this.isStateDifferent(this.state, updatedState)) {\n      return;\n    }\n\n    this.updateGameState(updatedState);\n    this.completeMoveTasks();\n  }\n\n  moveUp() {\n    const rotatedRightState = this.rotateRight(this.state);\n\n    if (!this.isStateValid(rotatedRightState)) {\n      return;\n    }\n\n    const updatedState = rotatedRightState.map((row) =>\n      // eslint-disable-next-line prettier/prettier\n      this.applyMove([...row]));\n    const rotatedLeftState = this.rotateLeft(updatedState);\n\n    this.updateGameState(rotatedLeftState);\n    this.completeMoveTasks();\n  }\n\n  moveDown() {\n    const rotatedRightState = this.rotateRight(this.state);\n    const reversedState = rotatedRightState.map((row) => [...row].reverse());\n\n    if (!this.isStateValid(reversedState)) {\n      return;\n    }\n\n    const updatedState = reversedState.map((row) =>\n      // eslint-disable-next-line prettier/prettier\n      this.applyMove(row).reverse());\n    const rotatedLeftState = this.rotateLeft(updatedState);\n\n    this.updateGameState(rotatedLeftState);\n    this.completeMoveTasks();\n  }\n\n  isStateDifferent(stateA, stateB) {\n    return JSON.stringify(stateA) !== JSON.stringify(stateB);\n  }\n\n  applyMove(vector) {\n    const newRow = [];\n    let i = 0;\n\n    while (i < vector.length) {\n      const current = vector[i];\n      const next = vector[i + 1];\n\n      if (current) {\n        if (current === next) {\n          newRow.push(current * 2);\n          this.score += current * 2;\n          i += 2;\n        } else {\n          newRow.push(current);\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n\n    while (newRow.length < vector.length) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.gameStatuses.PLAYING;\n    this.completeMoveTasks(2);\n  }\n\n  restart() {\n    this.resetState();\n    this.status = Game.gameStatuses.IDLE;\n    this.score = 0;\n  }\n\n  generateNewTile() {\n    const emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomCell =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    const [row, col] = randomCell;\n\n    this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  getEmptyCells() {\n    const matrix = this.getState();\n\n    return matrix\n      .flatMap((row, rowIndex) =>\n        // eslint-disable-next-line prettier/prettier, max-len, comma-dangle\n        row.map((cell, colIndex) => (cell === 0 ? [rowIndex, colIndex] : null)),)\n      .filter(Boolean);\n  }\n\n  rotateLeft(matrix) {\n    const rows = matrix.length;\n    const cols = matrix[0].length;\n    const resultMatrix = Array.from({ length: cols }, () =>\n      // eslint-disable-next-line comma-dangle\n      Array(rows).fill(''),);\n\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        const newRow = col;\n        const newCol = rows - 1 - row;\n\n        resultMatrix[newRow][newCol] = matrix[row][col];\n      }\n    }\n\n    return resultMatrix;\n  }\n\n  rotateRight(matrix) {\n    const rows = matrix.length;\n    const cols = matrix[0].length;\n    const resultMatrix = Array.from({ length: cols }, () =>\n      Array(rows).fill(''));\n\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        const newRow = cols - 1 - col;\n        const newCol = row;\n\n        resultMatrix[newRow][newCol] = matrix[row][col];\n      }\n    }\n\n    return resultMatrix;\n  }\n\n  isStateValid(state) {\n    if (this.status !== Game.gameStatuses.PLAYING) {\n      return false;\n    }\n\n    for (const row of state) {\n      let hasAdjacentEqualCells = false;\n      let hasIsolatedEmptyCell = false;\n\n      for (let i = 0; i < row.length - 1; i++) {\n        if (row[i] === row[i + 1]) {\n          hasAdjacentEqualCells = true;\n          break;\n        }\n\n        if (row[i] === 0) {\n          hasIsolatedEmptyCell = true;\n        }\n      }\n\n      if (hasAdjacentEqualCells || hasIsolatedEmptyCell) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  completeMoveTasks(count = 1) {\n    for (let i = 0; i < count; i++) {\n      this.generateNewTile();\n    }\n\n    const state = this.getState();\n\n    if (this.isVictory(state)) {\n      this.status = Game.gameStatuses.WIN;\n    } else if (this.isDefeat(state)) {\n      this.status = Game.gameStatuses.LOSE;\n    }\n  }\n\n  isDefeat(state) {\n    const rotatedState = this.rotateRight(state);\n\n    return [state, rotatedState].every(\n      (currentState) => !this.isStateValid(currentState),\n    );\n  }\n\n  isVictory(state) {\n    return state.flat().includes(2048);\n  }\n\n  resetState() {\n    this.state = this.initialState.map((row) => [...row]);\n  }\n\n  updateGameState(state) {\n    this.state = state;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["key","value","$197cd56b15c33885$var$ARROW_KEYS","LEFT","RIGHT","UP","DOWN","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$gameBoardRows","querySelectorAll","$197cd56b15c33885$var$messages","lose","win","start","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","generateDefaultState","instance","Constructor","state","map","row","status","gameStatuses","IDLE","score","fill","_this","isStateValid","updatedState","applyMove","updateGameState","completeMoveTasks","reversedState","reverse","isStateDifferent","rotatedRightState","rotateRight","rotatedLeftState","rotateLeft","stateA","stateB","JSON","stringify","vector","newRow","current","next","push","PLAYING","resetState","emptyCells","getEmptyCells","_randomCell","Math","floor","random","_s","_e","_i","_arr","_n","_d","done","err","col","matrix","getState","flatMap","rowIndex","cell","colIndex","filter","Boolean","rows","cols","resultMatrix","newCol","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","hasAdjacentEqualCells","hasIsolatedEmptyCell","return","count","generateNewTile","isVictory","WIN","isDefeat","LOSE","rotatedState","every","currentState","flat","includes","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$isFirstMove","$197cd56b15c33885$var$updateGameFields","forEach","cells","cellIndex","cellValue","textContent","className","classList","add","concat","$197cd56b15c33885$var$updateMessage","values","message","gameStatus","getStatus","remove","$197cd56b15c33885$var$updateScore","getScore","addEventListener","restart","replace","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.654d2a10.js.map"}